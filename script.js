document.addEventListener("DOMContentLoaded", () => {
  const gridDisplay = document.querySelector(".grid");//ููุง ูููุง ุจุชุญุฏูุฏ ุงูุนูุตุฑ ุงููู ูุญูู ุงูู class ุงุณูู "grid"ุ ููู ุงูููุงู ุงููู ุฑุญ ูุนุฑุถ ููู ุดุจูุฉ ูุนุจุฉ 2048 (ูุตูููุฉ ูุฑุจุนุงุช 4x4).
  const scoreDisplay = document.getElementById("score");
  const resultDisplay = document.getElementById("result");
  const width = 4; // ุนุฏุฏ ุงูุฃุนูุฏุฉ (ูุงูุตููู) ูู ุดุจูุฉ ุงููุนุจุฉ. ูุนุจุฉ 2048 ุชูููุฏููุง ุชุณุชุฎุฏู ุดุจูุฉ 4ร4. ูุจุชุนูู 16 ุจูุงุทู
  //ุงููุชุบูุฑุงุช
  let winCount = 0, lossCount = 0, score = 0, moveCount = 0;
  let squares = [], moveLog = [], gameAnalyticsLog = [];
  let lastMoveTime = Date.now();
  let dangerChart;

  function createBoard() { // ูุงูุดุงุก ุงูุจูุงุทุงุช ูุนูู ุดุจูู 
    for (let i = 0; i < width * width; i++) {// ุฑุญ ุชุนูู 16 ุจูุงุทู 
      const square = document.createElement("div");
      square.innerHTML = 0;//ูุนูู ุงููุฑุจุน ูุงุฑุบ ุฃู ุจุฏูู ูููุฉ
      gridDisplay.appendChild(square);
      squares.push(square);//square ูู ูุฌุฑุฏ ุงุณู ูุชุบูุฑ ููุซู ูู ูุฑุจุน ุฃู ุฎููุฉ ูู ุดุจูุฉ ุงููุนุจุฉ.
    }
    generate(); generate(); // ุชูููุฏ ุฑูู (2 ุฃู 4 ุนุงุฏุฉู)
  }

  function generate() {//ูุฐู ุงูุฏุงูุฉ ูุณุคููุฉ ุนู ุฅุถุงูุฉ ุฑูู 2 ูู ูุฑุจุน ูุงุฑุบ ุนุดูุงุฆู ูู ุงูุดุจูุฉ
    const emptySquares = squares.filter(sq => sq.innerHTML == 0);
    if (emptySquares.length === 0) return;
    const randomSquare = emptySquares[Math.floor(Math.random() * emptySquares.length)];
    randomSquare.innerHTML = 2;
    checkForGameOver();
  }

  function getMaxTile() {//ุชุฃุฎุฐ ูู ุงูุฃุฑูุงู ูุชุญุณุจ ุฃูุจุฑ ุฑูู ุจูููู.


    return Math.max(...squares.map(sq => parseInt(sq.innerHTML)));
  }
function move(direction) {//
  moveCount++;  // ุนุฏุงุฏ ุนุฏุฏ ุงูุญุฑูุงุช ุฒุงุฏ ุจูุงุญุฏ
  moveLog.push(direction);  // ุณุฌููุง ุงุชุฌุงู ุงูุญุฑูุฉ (ูุซู: "ูููู" ุฃู "ูุณุงุฑ")

  const now = Date.now();  // ุงูููุช ุงูุญุงูู ุจุงููููู ุซุงููุฉ
  const moveTime = now - lastMoveTime;  // ุญุณุงุจ ุงูุฒูู ุงูุฐู ุงุณุชุบุฑูู ุงููุงุนุจ ุจูู ุงูุญุฑูุฉ ุงูุณุงุจูุฉ ููุฐู
  lastMoveTime = now;  // ุชุญุฏูุซ ุขุฎุฑ ููุช ุญุฑูุฉ ูููุช ุงูุขู

  // ุญุณุงุจ ุนุฏุฏ ุงูุจูุงุทุงุช ุงููุงุฑุบุฉ (ุงููุฑุจุนุงุช ุงููู ูููุชูุง 0)
  const emptyCount = squares.filter(sq => sq.innerHTML == 0).length;

  // ุงูุญุตูู ุนูู ุฃูุจุฑ ุจูุงุทุฉ ููุฌูุฏุฉ (ุจุงุณุชุฎุฏุงู ุงูุฏุงูุฉ ุงููู ุดุฑุญูุงูุง ุณุงุจูุงู)
  const maxTile = getMaxTile();

  // ุญูุธ ุจูุงูุงุช ุงูุญุฑูุฉ ูู ุณุฌู ุชุญูููุงุช ุงููุนุจุฉ
  gameAnalyticsLog.push({
    direction,     // ุงุชุฌุงู ุงูุญุฑูุฉ
    score,         // ุงูููุงุท ุงูุญุงููุฉ
    maxTile,       // ุฃูุจุฑ ุฑูู ุนูู ุงูููุญุฉ
    moveTime,      // ุงูููุช ุจูู ุงูุญุฑูุฉ ุงูุญุงููุฉ ูุงูุณุงุจูุฉ
    emptyTiles: emptyCount,  // ุนุฏุฏ ุงูุจูุงุทุงุช ุงููุงุฑุบุฉ
    timestamp: new Date().toISOString()  // ููุช ุงูุญุฑูุฉ ุจุชูุณูู ุชุงุฑูุฎ ูููุช
  });

  // ุญูุธ ุฃุญุฏุซ ุญุฑูุฉ ูู ููุงู ุขุฎุฑ (ุฏุงูุฉ ุฎุงุฑุฌูุฉ) ูุชุฎุฒูู ุฃู ุนุฑุถ ูุงุญู
  saveLatestMove(direction, score, maxTile, moveTime, emptyCount);

  // ุงูุขู ูุจุฏุฃ ุงูุชูุตูุงุช ุงูุฐููุฉ:
  const recentMoves = moveLog.slice(-3);  // ูุงุฎุฐ ุขุฎุฑ 3 ุญุฑูุงุช

  //  ุฅุฐุง ูุงูุช ุงูุซูุงุซ ุญุฑูุงุช ุงูุฃุฎูุฑุฉ ูููุง ูู ููุณ ุงูุงุชุฌุงู
  if (recentMoves.length === 3 && recentMoves.every(m => m === recentMoves[0])) {
    showRecommendation("ุฃูุชู ุชูุฑุฑูู ููุณ ุงูุงุชุฌุงูุ ุฌุฑุจู ุชุบููุฑ ุงูุงุชุฌุงู ูุชุญุณูู ุงููุชูุฌุฉ.");
  }

  //  ุฅุฐุง ุงูููุงุท ุฃูู ูู 100 ูุนุฏุฏ ุงูุญุฑูุงุช ุฃูุจุฑ ูู 30ุงุนุทูู ุชูุตูู
  if (score < 100 && moveCount > 30) {
    showRecommendation("ุงูููุงุท ูุง ุฒุงูุช ููุฎูุถุฉุ ุญุงููู ุงูุชุฑููุฒ ุนูู ุฏูุฌ ุงูุจูุงุทุงุช ุงููุจูุฑุฉ.");
  }
}

  function showRecommendation(message) {
  // ูุญุฏุฏ ุงูุนูุตุฑ ุงููู ุฑุญ ูุนุฑุถ ููู ุงูุชูุตูุฉ
  const box = document.getElementById("recommendationBox");

  // ูุบูุฑ ูุญุชูู ุงููุต ุฏุงุฎู ุงูุนูุตุฑ ูุฅุธูุงุฑ ุงูุชูุตูุฉ ูุน ุฃููููุฉ ๐
  box.innerText = `๐ ุชูุตูุฉ: ${message}`;

  // ูุธูุฑ ุงูุนูุตุฑ (ูู ูุงู ูุฎูู)
  box.style.display = "block";

  // ูุญุฏุฏ ูุคูุช ูุฅุฎูุงุก ุงูุนูุตุฑ ุจุนุฏ 4 ุซูุงูู (4000 ููู ุซุงููุฉ)
  setTimeout(() => {
    box.style.display = "none";
  }, 4000);
}


  function saveLatestMove(direction, score, maxTile, moveTime, emptyTiles) {
  // 1. ุฅูุดุงุก ูุงุฆู ูุญุชูู ุจูุงูุงุช ุขุฎุฑ ุญุฑูุฉ ูู ุงููุนุจุฉ
  const latestMove = {
    Score: score,           // ุงูููุงุท ุงูุญุงููุฉ ูู ุงููุนุจุฉ
    MaxTile: maxTile,       // ุฃุนูู ุฑูู ุนูู ุงูุจูุงุทุงุช (Tiles)
    "MoveTime(ms)": moveTime, // ุงูููุช ุงูุฐู ุงุณุชุบุฑูุชู ุงูุญุฑูุฉ (ุจุงูููู ุซุงููุฉ)
    EmptyTiles: emptyTiles  // ุนุฏุฏ ุงูุจูุงุทุงุช ุงููุงุฑุบุฉ ุนูู ุงูููุญุฉ
  };
  
  // 2. ุฅุฑุณุงู ุจูุงูุงุช ุงูุญุฑูุฉ ุฅูู ุงูุฎุงุฏู (ุงูุณูุฑูุฑ) ูุชุญููููุง
  fetch('http://127.0.0.1:5000/predict', {
    method: 'POST',                       // ุทุฑููุฉ ุงูุฅุฑุณุงู POST ูุฃููุง ุชุฑุณู ุจูุงูุงุช
    headers: { 'Content-Type': 'application/json' }, // ููุน ุงูุจูุงูุงุช ุงููุฑุณูุฉ JSON
    body: JSON.stringify(latestMove)     // ุชุญููู ุจูุงูุงุช ุงูุญุฑูุฉ ุฅูู ูุต JSON
  })
  .then(res => res.json())               // ุงุณุชูุจุงู ุงูุฑุฏ ูู ุงูุณูุฑูุฑ ูุชุญูููู ุฅูู JSON
  .then(data => {
    // 3. ุจูุงุก ุนูู ุงูุฑุฏ (prediction) ูุญุฏุฏ ูุณุชูู ุงูุฎุทุฑ:
    // ุฅุฐุง ูุงูุช ุงููุชูุฌุฉ 1 ูุนูุงูุง ูู ุฎุทุฑุ ูุญุฏุฏ ุงูุฎุทุฑ ุนุงูู (90)
    // ูุฅุฐุง ูุงูุช 0 ูุญุฏุฏ ุงูุฎุทุฑ ููุฎูุถ (20)
    const riskLevel = data.prediction === 1 ? 90 : 20;

    // 4. ุชุญุฏูุซ ูุงุฌูุฉ ุงููุณุชุฎุฏู ุจุฑุณู ูุคุดุฑ ูุณุชูู ุงูุฎุทุฑ
    drawDangerGauge(riskLevel);

    // 5. ุฅุฐุง ูุงู ุงูุฎุทุฑ ุนุงููุ ูุนุฑุถ ุฑุณุงูุฉ ุชุญุฐูุฑ ููุชุฑุฉ ูุตูุฑุฉ (3 ุซูุงูู)
    if (data.prediction === 1) {
      const warningBox = document.getElementById("warningBox");
      warningBox.style.display = "block"; // ุฅุธูุงุฑ ูุฑุจุน ุงูุชุญุฐูุฑ
      setTimeout(() => { warningBox.style.display = "none"; }, 3000); // ุฅุฎูุงุคู ุจุนุฏ 3 ุซูุงูู
    }
  })
  .catch(err => console.error("ุฎุทุฃ ูู ุงูุงุชุตุงู ุจุงููููุฐุฌ:", err)); // ุงูุชุนุงูู ูุน ุงูุฃุฎุทุงุก ูู ุงูุงุชุตุงู ุจุงูุณูุฑูุฑ
}

function drawDangerGauge(level) {
  // 1. ุงูุญุตูู ุนูู ุนูุตุฑ ุงููุงููุงุณ (canvas) ูุฑุณูู 2D
  const ctx = document.getElementById("dangerGauge").getContext("2d");

  // 2. ุฅุฐุง ูุงู ููุงู ุฑุณู ุณุงุจู ููุฌูุฏุ ูุญุฐูู ุนุดุงู ูุง ูุชุฑุงูู ุงูุฑุณู
  if (dangerChart) dangerChart.destroy();

  // 3. ุฅูุดุงุก ุฑุณู ุฌุฏูุฏ ุจุงุณุชุฎุฏุงู Chart.js ูู ููุน "ุฏููุงุช" (ุฏุงุฆุฑู ูุน ุซูุจ ูู ุงููุณุท)
  dangerChart = new Chart(ctx, {
    type: "doughnut",  // ููุน ุงูุฑุณู ุฏุงุฆุฑู (ุฏููุงุช)
    data: {
      labels: ["ุงูุฎุทุฑ"],  // ุงูุชุณููุฉ (ุงููู ุชุธูุฑ ุจุฌุงูุจ ุงูุฑุณู)
      datasets: [{
        data: [level, 100 - level],  // ุงูุจูุงูุงุช: ูุณุชูู ุงูุฎุทุฑ + ุงูุจุงูู ููููู 100
        backgroundColor: 
          level >= 70 ? ["#e74c3c", "#ddd"] :      // ุฅุฐุง ุงูุฎุทุฑ ุนุงููุ ุงูููู ุฃุญูุฑ
          level >= 40 ? ["#f1c40f", "#ddd"] :      // ุฅุฐุง ูุชูุณุทุ ุฃุตูุฑ
                        ["#2ecc71", "#ddd"],       // ุฅุฐุง ููุฎูุถุ ุฃุฎุถุฑ
        borderWidth: 0  // ุจุฏูู ุญุฏูุฏ ููุฑุณู
      }]
    },
    // ููุง ุบุงูุจูุง ุชููู ุจุงูู ุฎุตุงุฆุต ุงูุฑุณู (ุฒู ุงูุฎูุงุฑุงุช) 

      options: {
        circumference: 180, rotation: -90, cutout: "70%",
        plugins: { legend: { display: false }, tooltip: { enabled: false } }
      }
    });
  }

//ูุฐู ุงูุฏูุงู ุชููู ููุท ุจุชุฑุชูุจ ุงูููู ูุชุญุฑูููุง ุฏูู ุฏูุฌ.
 // ุฏุงูุฉ slide: ุชุญุฑู ุงูุฃุฑูุงู ูู ุงูุตู ูููุณุงุฑ
function slide(row) {
  // ุชุตูู ุงูุตู ูู ุงูุฃุตูุงุฑ (0 ุชุนุชุจุฑ ูุงุถูุฉ)
  let filtered = row.filter(val => val); // ุชุฃุฎุฐ ุงูููู ุงููู ูุด ุตูุฑ
  // ุชุถูู ุฃุตูุงุฑ ูู ุขุฎุฑ ุงูุตู ุนุดุงู ูุนุงุฏู ุงูุทูู ุงูุฃุตูู
  return filtered.concat(Array(width - filtered.length).fill(0));
  // ูุซุงู: [2, 0, 2, 4] โ [2, 2, 4, 0]
}

// ุฏุงูุฉ slideReversed: ุชุญุฑู ุงูุฃุฑูุงู ูู ุงูุตู ูููููู
function slideReversed(row) {
  // ุชุตูู ุงูุตู ูู ุงูุฃุตูุงุฑ
  let filtered = row.filter(val => val);
  // ุชุถูู ุฃุตูุงุฑ ูู ุจุฏุงูุฉ ุงูุตู ุนุดุงู ูุนุงุฏู ุงูุทูู ุงูุฃุตูู
  return Array(width - filtered.length).fill(0).concat(filtered);
  // ูุซุงู: [2, 0, 2, 4] โ [0, 2, 2, 4]
}

// ุฏุงูุฉ moveLeft: ุชุญุฑู ูู ุตู ูู ุงููุนุจุฉ ูููุณุงุฑ
function moveLeft() {
  for (let i = 0; i < 16; i += width) {
    // ุชูุฑุฃ ุตู ูู ูุฑุจุนุงุช ุงููุนุจุฉ
    let row = squares.slice(i, i + width).map(sq => parseInt(sq.innerHTML));
    // ุชุณุชุฎุฏู slide ูุชุญุฑูู ุงูุฃุฑูุงู ูููุณุงุฑ
    let newRow = slide(row);
    // ุชุญุฏุซ ุงููุฑุจุนุงุช ุจุงูููู ุงูุฌุฏูุฏุฉ
    for (let j = 0; j < width; j++) squares[i + j].innerHTML = newRow[j];
  }
}

// ุฏุงูุฉ moveRight: ุชุญุฑู ูู ุตู ูู ุงููุนุจุฉ ูููููู
function moveRight() {
  for (let i = 0; i < 16; i += width) {
    let row = squares.slice(i, i + width).map(sq => parseInt(sq.innerHTML));
    // ุชุณุชุฎุฏู slideReversed ูุชุญุฑูู ุงูุฃุฑูุงู ูููููู
    let newRow = slideReversed(row);
    for (let j = 0; j < width; j++) squares[i + j].innerHTML = newRow[j];
  }
}

// ุฏุงูุฉ moveUp: ุชุญุฑู ูู ุนููุฏ ูู ุงููุนุจุฉ ููุฃุนูู
function moveUp() {
  for (let i = 0; i < width; i++) {
    // ุชูุฑุฃ ุนููุฏ ูู ูุฑุจุนุงุช ุงููุนุจุฉ (ุจุงุณุชุฎุฏุงู ุงูุญุณุงุจุงุช i + j*width)
    let column = [0, 1, 2, 3].map(j => parseInt(squares[i + j * width].innerHTML));
    // ุชุญุฑู ุงูุนููุฏ ููุฃุนูู ุจููุณ ุทุฑููุฉ slide (ุชุญุฑูู ููุฌูุฉ "ุงูุฃููู")
    let newColumn = slide(column);
    // ุชุญุฏุซ ูุฑุจุนุงุช ุงูุนููุฏ ุจุงูููู ุงูุฌุฏูุฏุฉ
    for (let j = 0; j < 4; j++) squares[i + j * width].innerHTML = newColumn[j];
  }
}

// ุฏุงูุฉ moveDown: ุชุญุฑู ูู ุนููุฏ ูู ุงููุนุจุฉ ููุฃุณูู
function moveDown() {
  for (let i = 0; i < width; i++) {
    let column = [0, 1, 2, 3].map(j => parseInt(squares[i + j * width].innerHTML));
    // ุชุญุฑู ุงูุนููุฏ ููุฃุณูู ุจููุณ ุทุฑููุฉ slideReversed (ุชุญุฑูู ููุฌูุฉ "ุงูุฃุฎูุฑุฉ")
    let newColumn = slideReversed(column);
    for (let j = 0; j < 4; j++) squares[i + j * width].innerHTML = newColumn[j];
  }
}


  // ุฏูุฌ ุงูุฃุฑูุงู ุงููุชุดุงุจูุฉ ูู ุงูุตููู (ุฃุฑูุงู ูุชุฌุงูุฑุฉ ุจููุณ ุงููููุฉ)
function combineRow() {
  for (let i = 0; i < 15; i++) {   // ููุดู ุนูู ูู ุฎุงูุงุช ุงูุตููู ูุงุนุฏุง ุขุฎุฑ ุฎุงูุฉ ูู ูู ุตู
    // ูุชุญูู ุฅุฐุง ุงูุฎุงูุฉ ุงูุญุงููุฉ ูุงููู ุจุนุฏูุง ุจููุณ ุงููููุฉ
    if (squares[i].innerHTML === squares[i + 1].innerHTML) {
      let total = parseInt(squares[i].innerHTML) * 2;  // ูุฌูุน ุงูุฑูููู (ูุถุฑุจ ูู 2)
      squares[i].innerHTML = total;       // ูุญุฏุซ ุงูุฎุงูุฉ ุงูุฃููู ุจุงููุชูุฌุฉ ุงูุฌุฏูุฏุฉ (ุงููุฌููุน)
      squares[i + 1].innerHTML = 0;       // ูุตูุฑ ุงูุฎุงูุฉ ุงูุซุงููุฉ (ุชู ุฏูุฌูุง)
      score += total;                     // ูุถูู ุงููุชูุฌุฉ ููุณููุฑ ุงูููู
      scoreDisplay.innerHTML = score;    // ูุญุฏุซ ุนุฑุถ ุงูุณููุฑ ูู ุงููุงุฌูุฉ
    }
  }
}

// ุฏูุฌ ุงูุฃุฑูุงู ุงููุชุดุงุจูุฉ ูู ุงูุฃุนูุฏุฉ (ุฃุฑูุงู ูุชุฌุงูุฑุฉ ูู ููุณ ุงูุนููุฏ)
function combineColumn() {
  for (let i = 0; i < 12; i++) {   // ููุดู ุนูู ูู ุฎุงูุงุช ุงูุฃุนูุฏุฉ ูุงุนุฏุง ุขุฎุฑ ุตู ูู ูู ุนููุฏ
    // ูุชุญูู ุฅุฐุง ุงูุฎุงูุฉ ุงูุญุงููุฉ ูุงููู ุชุญุชูุง ุจููุณ ุงููููุฉ
    if (squares[i].innerHTML === squares[i + width].innerHTML) {
      let total = parseInt(squares[i].innerHTML) * 2;  // ูุฌูุน ุงูุฑูููู
      squares[i].innerHTML = total;       // ูุญุฏุซ ุงูุฎุงูุฉ ุงูุฃููู ุจุงููุชูุฌุฉ
      squares[i + width].innerHTML = 0;   // ูุตูุฑ ุงูุฎุงูุฉ ุงููู ุชุญุชูุง (ุชู ุฏูุฌูุง)
      score += total;                     // ูุถูู ููููุงุท ุงููููุฉ
      scoreDisplay.innerHTML = score;    // ูุญุฏุซ ุนุฑุถ ุงูููุงุท
    }
  }
}

 function control(e) {
  switch (e.keyCode) {
    case 37: // ููุชุงุญ ุงูุณูู ุงููุณุงุฑ
      move("Left");   // ุชููุฐ ุญุฑูุฉ ุงูุชุญุฑูู ูููุณุงุฑ (ุชุญุฏูุซ ุงูููุญุฉ)
      keyLeft();      // ุชููุฐ ูุธุงุฆู ุฎุงุตุฉ ุจุชุญุฑูู ุงููุณุงุฑ (ุฏูุฌ ูุชุญุฑูู ูุชูููุฏ ุฑูู ุฌุฏูุฏ)
      break;
    case 38: // ููุชุงุญ ุงูุณูู ููุฃุนูู
      move("Up");
      keyUp();
      break;
    case 39: // ููุชุงุญ ุงูุณูู ุงููููู
      move("Right");
      keyRight();
      break;
    case 40: // ููุชุงุญ ุงูุณูู ููุฃุณูู
      move("Down");
      keyDown();
      break;
  }
}
// ุชูุนูู ุงูุชุญูู ุนูุฏ ุฑูุน ุฅุตุจุน ุงููุงุนุจ ุนู ุฒุฑ ุงูุณูู (keyup)
document.addEventListener("keyup", control);

// ุนูุฏ ุชุญุฑูู ุงููุณุงุฑ: ุชุญุฑูู ุงูุฃุฑูุงู ูููุณุงุฑุ ุฏูุฌูุงุ ุชุญุฑูู ูุฑุฉ ุซุงููุฉ ูุชุญุฏูุซ ุงูููุงูุนุ ุซู ุชูููุฏ ุฑูู ุฌุฏูุฏ ุนุดูุงุฆู ูู ููุญุฉ ุงููุนุจุฉ
function keyLeft() { 
  moveLeft(); 
  combineRow(); 
  moveLeft(); 
  generate(); 
}

// ููุณ ุงูููุฑุฉ ูุจุงูู ุงูุงุชุฌุงูุงุช
function keyRight() { 
  moveRight(); 
  combineRow(); 
  moveRight(); 
  generate(); 
}

function keyUp() { 
  moveUp(); 
  combineColumn(); 
  moveUp(); 
  generate(); 
}

function keyDown() { 
  moveDown(); 
  combineColumn(); 
  moveDown(); 
  generate(); 
}

  function checkForWin() {
  // ุชูุญุต ุฅุฐุง ูุงู ูู ุฃู ุฎุงูุฉ (square) ุงูุฑูู 2048 ููุฌูุฏ
  if (squares.some(sq => sq.innerHTML == 2048)) {
    winCount++; // ุฒูุงุฏุฉ ุนุฏุงุฏ ุงูุงูุชุตุงุฑุงุช
    
    // ุนุฑุถ ุฑุณุงูุฉ ุงูููุฒ ููุงุนุจ
    resultDisplay.innerHTML = "ูุจุฑูููู ูุง fatima ๐ ูุตูุชู ูู 2048! ๐";
    
    // ุฅููุงู ุงุณุชูุจุงู ุถุบุทุงุช ุงูููุงุชูุญ (ุชูููู ุงูุชุญูู ูู ุงููุนุจุฉ)
    document.removeEventListener("keyup", control);
    
    // ุนุฑุถ ุฅุญุตุงุฆูุงุช ุงููุนุจุฉ (ูุซู ุงูููุงุทุ ุงูููุชุ ุงูุฎ)
    showStats();
    
    // ุนุฑุถ ุฒุฑ ุฅุนุงุฏุฉ ุชุดุบูู ุงููุนุจุฉ
    showRestartButton();
    
    // ุจุนุฏ 3 ุซูุงููุ ุชูุธูู ุงููุนุจุฉ ุฃู ุฅุนุงุฏุฉ ุชููุฆุชูุง (ุฏุงูุฉ clear)
    setTimeout(clear, 3000);
  }
}


  // ุฏุงูุฉ ููุชุญูู ูู ุงูุชูุงุก ุงููุนุจุฉ (ุฎุณุงุฑุฉ) ููุง ูุง ูููู ููู ุฃู ุฎุงูุฉ ูุงุฑุบุฉ
function checkForGameOver() {
  // ุฅุฐุง ูุง ูู ุฃู ุฎุงูุฉ ูููุง ุตูุฑ (ูุนูู ูููุง ูููุงูุฉ ููุง ูู ุญุฑูุฉ ููููุฉ)
  if (!squares.some(sq => sq.innerHTML == 0)) {
    lossCount++; // ุฒูุงุฏุฉ ุนุฏุฏ ูุฑุงุช ุงูุฎุณุงุฑุฉ
    
    // ุนุฑุถ ุฑุณุงูุฉ ุงูุชูุงุก ุงููุนุจุฉ ูุฎุณุงุฑุฉ ุงููุงุนุจ
    resultDisplay.innerHTML = "ุฎูุตุช ุงููุนุจุฉ ูุง fatima ๐ข ุญุงููู ูุฑุฉ ุชุงููุฉ!";
    
    // ุชุนุทูู ุชุญูู ุงููุงุนุจ ูู ุงููุนุจุฉ (ุชุนุทูู ุถุบุทุงุช ุงูููุงุชูุญ)
    document.removeEventListener("keyup", control);
    
    // ุนุฑุถ ุฅุญุตุงุฆูุงุช ุงููุนุจุฉ
    showStats();
    
    // ุนุฑุถ ุฒุฑ ูุฅุนุงุฏุฉ ุชุดุบูู ุงููุนุจุฉ
    showRestartButton();
    
    // ุชูุธูู ุงููุนุจุฉ ุจุนุฏ 3 ุซูุงูู
    setTimeout(clear, 3000);
  }
}


  function showStats() {
  console.log("ุนุฏุฏ ุงูุญุฑูุงุช:", moveCount);  // ุทุจุงุนุฉ ุนุฏุฏ ุงูุญุฑูุงุช ุงููู ุนูููุง ุงููุงุนุจ ูู ูุญุฏุฉ ุงูุชุญูู (ุงููููุณูู)
  generateCSVAnalytics();                   // ุฅูุดุงุก ููู ุชุญูููุงุช (CSV) ููุนุจุฉ ุฃู ุจูุงูุงุช ุงูุญุฑูุงุช
  drawCharts();                             // ุฑุณู ุงูุฑุณูู ุงูุจูุงููุฉ ุจูุงุกู ุนูู ุจูุงูุงุช ุงููุนุจุฉ (ูุซู ุฃุฏุงุก ุงููุงุนุจ)
}


  function generateCSVAnalytics() {                       // ุฏุงูุฉ ุชูุดุฆ ููู CSV ูุญุชูู ุนูู ุชุญูููุงุช ุงููุนุจุฉ
  let csv = "Direction,Score,MaxTile,MoveTime(ms),EmptyTiles,Timestamp\n";  
                                                        // ุฑุฃุณ ุงูุฌุฏูู: ุฃุณูุงุก ุงูุฃุนูุฏุฉ ูู ููู CSV

  gameAnalyticsLog.forEach(e => {                       // ููุฑุฑ ุนูู ูู ุนูุตุฑ ุฏุงุฎู ูุตูููุฉ ุชุญูููุงุช ุงููุนุจุฉ
    csv += `${e.direction},${e.score},${e.maxTile},${e.moveTime},${e.emptyTiles},${e.timestamp}\n`; 
                                                        // ูุถูู ูู ุญุฑูุฉ ูุณุทุฑ ุฌุฏูุฏ ูู ููู CSV
  });

  const link = document.createElement("a");             // ููุดุฆ ุนูุตุฑ <a> ุฌุฏูุฏ ูููู (ุฑุงุจุท ูุชุญููู ุงูููู)
  link.href = "data:text/csv;charset=utf-8," + encodeURIComponent(csv);  
                                                        // ูุญุฏุฏ ุฑุงุจุท ุงูุชุญููู ููุดููุฑ ุงูุจูุงูุงุช ุจุตูุบุฉ CSV
  link.download = "full_game_data.csv";                 // ูุญุฏุฏ ุงุณู ุงูููู ุนูุฏ ุชุญูููู
  document.body.appendChild(link);                      // ูุถูู ุงูุฑุงุจุท ูุคูุชูุง ุฅูู ุงูุตูุญุฉ
  link.click();                                          // ูููุฐ ููุฑุฉ ููููุฉ ุนูู ุงูุฑุงุจุท ูุชูุฒูู ุงูููู
}


function drawCharts() {
  // ๐ฏ 1. ุฑุณู ูุฎุทุท ุงูุฃุนูุฏุฉ ูุนุฏุฏ ูุฑุงุช ุงูุถุบุท ุนูู ูู ุงุชุฌุงู (ูุณุงุฑุ ููููุ ูููุ ุชุญุช)
  const ctxMove = document.getElementById("moveChart").getContext("2d");
  new Chart(ctxMove, {
    type: "bar", // ููุน ุงููุฎุทุท: ุฃุนูุฏุฉ
    data: {
      labels: ["Left", "Right", "Up", "Down"], // ุฃุณูุงุก ุงูุงุชุฌุงูุงุช
      datasets: [{
        // ูุญุณุจ ุนุฏุฏ ูู ุงุชุฌุงู ุจุงุณุชุฎุฏุงู filter
        data: ["Left", "Right", "Up", "Down"].map(d => moveLog.filter(m => m === d).length),
        backgroundColor: ["#f39c12", "#2980b9", "#27ae60", "#c0392b"] // ุฃููุงู ุงูุฃุนูุฏุฉ
      }]
    }
  });

  // ๐ฏ 2. ุฑุณู ูุฎุทุท ุฏุงุฆุฑู (doughnut) ููุถุญ ุนุฏุฏ ูุฑุงุช ุงูููุฒ ูุงูุฎุณุงุฑุฉ
  const ctxWinLoss = document.getElementById("winLossChart").getContext("2d");
  new Chart(ctxWinLoss, {
    type: "doughnut", // ููุน ุงููุฎุทุท: ุฏูููุช
    data: {
      labels: ["ููุฒ", "ุฎุณุงุฑุฉ"],
      datasets: [{
        data: [winCount, lossCount], // ุนุฏุฏ ูุฑุงุช ุงูููุฒ ูุงูุฎุณุงุฑุฉ
        backgroundColor: ["#2ecc71", "#e74c3c"] // ุฃุฎุถุฑ ููููุฒ ูุฃุญูุฑ ููุฎุณุงุฑุฉ
      }]
    }
  });

  // ๐ฏ 3. ุฑุณู ูุฎุทุท ุฎุทู ูุฒูู ุงูุงุณุชุฌุงุจุฉ ุจูู ูู ุญุฑูุฉ ูุงูุซุงููุฉ (ms)
  const moveTimes = gameAnalyticsLog.map(e => e.moveTime); // ุงุณุชุฎุฑุงุฌ ุฃููุงุช ุงูุญุฑูุงุช
  const ctxTime = document.getElementById("moveTimeChart").getContext("2d");
  new Chart(ctxTime, {
    type: "line", // ููุน ุงููุฎุทุท: ุฎุทู
    data: {
      labels: moveTimes.map((_, i) => `ุญุฑูุฉ ${i + 1}`), // ุชุณููุงุช X: ุญุฑูุฉ 1ุ 2ุ ุฅูุฎ
      datasets: [{
        label: "ุงูุฒูู ุจูู ุงูุญุฑูุงุช (ms)",
        data: moveTimes, // ุงูููู ุงููุนููุฉ
        borderColor: "#8e44ad", // ููู ุงูุฎุท
        backgroundColor: "rgba(142, 68, 173, 0.2)", // ุชุนุจุฆุฉ ุฎูููุฉ ุชุญุช ุงูุฎุท
        tension: 0.4, // ุงูุญูุงุก ุงูุฎุท
        fill: true // ุชุนุจุฆุฉ ุงููุณุงุญุฉ ุชุญุช ุงูุฎุท
      }]
    }
  });

  // ๐ฏ 4. ุฑุณู ูุฎุทุท ุฎุทู ูุชุทูุฑ ุฃูุจุฑ ุจูุงุทุฉ ูุตู ููุง ุงููุงุนุจ ูู ูู ุญุฑูุฉ
  const maxTiles = gameAnalyticsLog.map(e => e.maxTile); // ุงุณุชุฎุฑุงุฌ ุฃูุจุฑ ุจูุงุทุฉ ูู ูู ุญุฑูุฉ
  const ctxMax = document.getElementById("maxTileChart").getContext("2d");
  new Chart(ctxMax, {
    type: "line",
    data: {
      labels: maxTiles.map((_, i) => `ุญุฑูุฉ ${i + 1}`),
      datasets: [{
        label: "ุฃุนูู ุจูุงุทุฉ",
        data: maxTiles,
        borderColor: "#e67e22",
        backgroundColor: "rgba(230, 126, 34, 0.2)",
        tension: 0.3,
        fill: true
      }]
    }
  });
}

// ูููุงู
  function addColours() {
    const colors = {
      0: "#afa192", 2: "#eee4da", 4: "#ede0c8", 8: "#f2b179",
      16: "#ffcea4", 32: "#e8c064", 64: "#ffab6e", 128: "#fd9982",
      256: "#ead79c", 512: "#76daff", 1024: "#beeaa5", 2048: "#d7d4f0"
    };
    squares.forEach(sq => {
      const val = parseInt(sq.innerHTML);
      sq.style.backgroundColor = colors[val] || "#ffffff";
    });
  }

  let myTimer = setInterval(addColours, 50);
  function clear() { clearInterval(myTimer); }

  createBoard();
});

// ุงูุชุญูู ุจุงูุตูุช
const bgMusic = document.getElementById("bgMusic");
const toggleSoundBtn = document.getElementById("toggleSound");
const restartBtn = document.getElementById("restartBtn");
let soundOn = false;

toggleSoundBtn.addEventListener("click", () => {
  soundOn = !soundOn;
  if (soundOn) {
    bgMusic.play();
    toggleSoundBtn.textContent = "ุฅููุงู ุงูุตูุช ๐";
  } else {
    bgMusic.pause();
    toggleSoundBtn.textContent = "ุชุดุบูู ุงูุตูุช ๐";
  }
});
//ุงุธูุงุฑ ุฒุฑ ุงุนุงุฏู ุชุดุบูู ูุงุนุงุฏุฉ ุชุดุบูู ุงูุตูุญู ุนูุฏ ุงูุถุบุท ุนููู 
function showRestartButton() {
  restartBtn.style.display = "inline-block";
}
restartBtn.addEventListener("click", () => {
  location.reload();
});
